name: Release documentation

# Generate docs on tagged releases
on:
  push:
    tags:
      - "v*"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1

      - name: Install dependencies
        run: |
          npm ci

      - name: Generate and push documentation
        env:
          DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}
        run: |
          # Find the tag name
          TAG_NAME="${GITHUB_REF#refs/tags/}"

          echo "Generating documentation data for tag $TAG_NAME"

          # Checkout the gh-pages branch in a temporary folder
          git clone "$(git remote get-url origin)" .temp
          cd .temp
          git checkout gh-pages
          git pull || true
          cd ..

          # Generate documentation file and add file to list of versions
          npx typedoc src/Yuuko.ts --out ".temp/docs/$TAG_NAME" --readme none
          echo "- '$TAG_NAME'" >> .temp/_data/docs.yml

          # Add generated files that start with underscores to Jekyll `include`
          cd .temp
          UNDERSCORE_FILES=(docs/$TAG_NAME/**/_*)
          for file in "$UNDERSCORES_FILE[@]"; do
            # `include` is the last item of the config file, so we just append
            echo "- '$file'" >> .config.yml
          done

          # Commit to the gh-pages branch
          git config user.name "Build Bot"
          git config user.email "bot@github-actions"
          git add docs _data _config.yml
          git commit -m "Documentation for tag $TAG_NAME" -m "Generated from commit ${GITHUB_SHA:0:7}"

          # Convert remote URL from HTTPS to SSH format so we can use our deploy key
          git remote set-url origin "$(git remote get-url origin | sed 's#http.*com/#git@github.com:#g')"

          # Push the commit to the origin
          eval `ssh-agent -t 60 -s`
          echo "$DEPLOY_KEY" | ssh-add -
          mkdir -p ~/.ssh/
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          git push || git push --set-upstream origin gh-pages
          ssh-agent -k
